{"ast":null,"code":"import axios from 'axios';\nimport { getToken } from '../auth';\nexport const BASE_URL = 'http://localhost:8080/api/v1';\nexport const myAxios = axios.create({\n  baseURL: BASE_URL\n});\nexport const privateAxios = axios.create({\n  baseURL: BASE_URL\n});\nprivateAxios.interceptors.request.use(config => {\n  const token = getToken();\n  if (token) {\n    config.headers = config.headers || {}; // create headers object if it doesn't exist\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));","map":{"version":3,"names":["axios","getToken","BASE_URL","myAxios","create","baseURL","privateAxios","interceptors","request","use","config","token","headers","Authorization","error","Promise","reject"],"sources":["C:/Users/raviz/Downloads/Frontend/src/services/helper.js"],"sourcesContent":["import axios from 'axios';\r\nimport { getToken } from '../auth';\r\n\r\nexport const BASE_URL='http://localhost:8080/api/v1';\r\n\r\nexport const  myAxios = axios.create({\r\n    baseURL: BASE_URL\r\n});\r\n\r\nexport const privateAxios = axios.create({\r\n    baseURL: BASE_URL,\r\n});\r\n\r\nprivateAxios.interceptors.request.use(\r\n    (config) => {\r\n        const token = getToken();\r\n\r\n        if (token) {\r\n            config.headers = config.headers || {}; // create headers object if it doesn't exist\r\n            config.headers.Authorization = `Bearer ${token}`;\r\n        }\r\n\r\n        return config;\r\n    },\r\n    (error) => Promise.reject(error)\r\n);"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,SAAS;AAElC,OAAO,MAAMC,QAAQ,GAAC,8BAA8B;AAEpD,OAAO,MAAOC,OAAO,GAAGH,KAAK,CAACI,MAAM,CAAC;EACjCC,OAAO,EAAEH;AACb,CAAC,CAAC;AAEF,OAAO,MAAMI,YAAY,GAAGN,KAAK,CAACI,MAAM,CAAC;EACrCC,OAAO,EAAEH;AACb,CAAC,CAAC;AAEFI,YAAY,CAACC,YAAY,CAACC,OAAO,CAACC,GAAG,CAChCC,MAAM,IAAK;EACR,MAAMC,KAAK,GAAGV,QAAQ,CAAC,CAAC;EAExB,IAAIU,KAAK,EAAE;IACPD,MAAM,CAACE,OAAO,GAAGF,MAAM,CAACE,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC;IACvCF,MAAM,CAACE,OAAO,CAACC,aAAa,GAAI,UAASF,KAAM,EAAC;EACpD;EAEA,OAAOD,MAAM;AACjB,CAAC,EACAI,KAAK,IAAKC,OAAO,CAACC,MAAM,CAACF,KAAK,CACnC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}